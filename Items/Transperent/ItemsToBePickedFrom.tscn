[gd_scene load_steps=9 format=2]

[ext_resource path="res://Objects/PNG/Background/Icon1.png" type="Texture" id=1]
[ext_resource path="res://ItemDrop.gd" type="Script" id=2]
[ext_resource path="res://item_icons/Ruby.png" type="Texture" id=3]
[ext_resource path="res://item_icons/Brain.png" type="Texture" id=4]
[ext_resource path="res://item_icons/AnimalSkull.png" type="Texture" id=5]

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 9.5, 9.5 )

[sub_resource type="Animation" id=2]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("../Skull:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=3]
resource_name = "float"
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("../Skull:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 0, -1 ) ]
}

[node name="ItemDrop" type="KinematicBody2D"]
script = ExtResource( 2 )

[node name="Skull" type="Sprite" parent="."]
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 1 )

[node name="Ruby" type="Sprite" parent="."]
position = Vector2( 21, 2 )
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 3 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 0, 1 )
shape = SubResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../CollisionShape2D")
autoplay = "float"
anims/RESET = SubResource( 2 )
anims/float = SubResource( 3 )

[node name="Brain" type="Sprite" parent="."]
position = Vector2( 40, 1 )
scale = Vector2( 0.5, 0.53125 )
texture = ExtResource( 4 )

[node name="AnimalSkull" type="Sprite" parent="."]
position = Vector2( 64, 1 )
texture = ExtResource( 5 )
